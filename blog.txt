npx create-next-app food-order
yarn dev

theme color
#d1411e

pages/index.js
delete everything inside the root div instead of <Head/>
customize Head children

Pages
localhost:3000/
localhost:3000/product/2
localhost:3000/orders/2
localhost:3000/cart
localhost:3000/admin
localhost:3000/admin/login

apis
localhost:3000/api/products     POST
localhost:3000/api/products     GET

image folder in public folder

/component/Layout to shortcut Navbar - page components - Footer

delete everything in /styles/Home.module.css

/pages/_app.js is the view
wrap <Component {...pageProps}> inside the Layout
Nav and Footer will appear in all pages now

we don't need router to route pages
go to /about

styles should be in /styles
example: /styles/Navbar.module.css

/img/
/ cz in public

layout='fill' replaces doing width and height to Image
then add objectFit="contain"

100hv for full screen, but -100px cz Navbar
300vw for full screen

display flex did put them z each other

get rid of horizontal scroll: in container css, overflow: hidden

style={{ transform: `translateX(${-100*index}vw)` }}
on the map wrapper. change images of the featured
-100vw represents one screen
transition: all 1.5s ease-in-out; is it's animation

i'm making the Featured z-index higher than the Navbar and that's looking so cool.

localhost:3000/Product/id=233215
so we make a /pages/product/
and ./[id].jsx
here we do Product Page

position: relative; the image container
the image wasn't obedient

the htmlFor in the label tag refers to the checkbox id

the Cart page will not use a sluck, so no need to create a folder and [id].js

opacity is like brightness

we will use common breakpoints to make the app responsive for the mobile view also
@media screen and (max-width:480px) {}
that was in the css of Navbar, Featured, PizzaCard, Footer, Product,...
it holds classNames that will be altered

add a .env and MONGODB_URL
the url is from the cluster connect

we're creating a libraries (util) and doing mongoose stuff there

we create our models. to create and read from documents(alt. tables)

to use our models, we will go inside pages/api/
delete the file hello.js that contains:
    export default function handler(req, res) {
    res.status(200).json({ name: 'John Doe' })
    }
and create folders: products - orders
we want localhost:3000/api/products to fetch all pizzas. and we can do a post request on it to add new pizza

POST req.body on localhost:3000/api/products
{
    "title": "pizza1",
    "img": "/img/pizza.png",
    "desc": "desc1",
    "prices": [12,13,14],
    "extras": [{
        "text":"onion sauce",
        "price": 2
    }]
}

in GETting const products = Product.find(), this gets all.
to get with condition: const products = Product.find({title:"pizza1"})

in reactjs we used to useEffect.
in Next we /pages/index.js
export const getServerSideProps = async () => {}

yarn add axios

mongoose.model.Product or is it mongoose.models.Product?

in /product/[id].js
export const getServerSideProps = async ({params}) => {
the params is the id in the link
we put ({ pizza }) where the props should be because it's taking props from the fetched axios down

now, for the /product/${_id} to work, we will add a file in /pages/api/products [id].js
PUT method to update the pizza

create a new folder /redux
yarn add @reduxjs/toolkit
yarn add redux react-redux

wrap the whole app with the redux provider in /pages/_app.js

useDispatch in the /pages/product/[id].jsx is for handling the add to cart

Navbar is cute in the component

https://paypal.github.io/react-paypal-js/?path=/docs/example-paypalbuttons--default
yarn add @paypal/react-paypal-js
"disable-funding": "credit,card,venmo"
in the provider options give your dev id where it says client-id
developer.paypal.com/developer/applications

create the orders api

the router in useRouter will change the page if the request was successful

the data given as props to some pages is fetched from getServerSideProps

Order props
method:0    cash on delivery
method:1    paypal

cannont overide Order module once compiled:
got to ./models/Orders.js
instead of mongoose.model do mongoose.models

when admin/index.jsx no id needed to page
localhost:3000/admin

the delete will now delete from mongodb, but it will not appear in the page.
so we will create a pizzaList state
same goes with orders. we're putting stuff in state and deal there

if there's no admin cookies, the app should redirect to the home page
yarn add cookie

because there should be only one admin user,
we're adding to the ./.env file
USERNAME
PASSWORD
TOKEN

restart app when changing in .env

redirecting in nextjs
if(myCookie.token !== process.env.TOKEN) {
    return {
        redirect: {
            destination: "/admin/login"
        }
    }
}

onChange={(e) => setFile(e.target.files[0])}
we can only choose one file

when you use position absolute, the parent should be relative

flex-wrap if more the it won't be horzontal anymore

my cloudinary
"https://api.cloudinary.com/v1_1/dbdepdq9d/image/upload"
add upload preset from settings>upload>add upload preset
make the file name same as that of upload_preset in data request
choose unsigned

we should allow the domain to show images from external on this nextjs app
in ./next.config.js
delete: reactStrictMode: true,
instead:
images: {
    domains: ["res.cloudinary.com"]
}